--Data Cleaning
--UPDATE Cyclistic_Full_Data
--SET started_at = replace(started_at, '/', '-')

--UPDATE Cyclistic_Full_Data
--SET start_time = TRIM(substr(started_at, -5))
	
--UPDATE Cyclistic_Full_Data
--SET rideable_type = replace(rideable_type, 'docked_bike', 'classic_bike')

--UPDATE Cyclistic_Full_Data
--SET start_time = 0||start_time
--WHERE length(start_time) <5


--Initialization
SELECT member_casual AS Type_of_Rider,
COUNT(ride_id) AS Total_Num_Of_Rides
FROM Cyclistic_Full_Data
GROUP BY member_casual;
	
	
--Number of bike riders per bike type
SELECT member_casual as Type_of_Rider, rideable_type as bike_type,
COUNT(ride_id) AS Total_Num_of_Rides
FROM Cyclistic_Full_Data
GROUP BY Type_of_Rider, bike_type;

	
--Most popular day to ride a bike
SELECT CASE
	WHEN day_of_week = 1 THEN 'Sunday'
	WHEN day_of_week = 2 THEN 'Monday'
	WHEN day_of_week = 3 THEN 'Tuesday'
	WHEN day_of_week = 4 THEN 'Wednesday'
	WHEN day_of_week = 5 THEN 'Thursday'
	WHEN day_of_week = 6 THEN 'Friday'
	ELSE 'Saturday'
END AS dayname,
COUNT(ride_id) AS Num_of_Trips
FROM Cyclistic_Full_Data
GROUP BY dayname	
ORDER BY Num_of_trips DESC;


--Top 10 most popular starting stations
SELECT start_station_name AS Starting_Station, start_lat, start_lng, end_lat, end_lng,
COUNT(ride_id) AS Num_of_Customers
FROM Cyclistic_Full_Data
WHERE	start_station_name IS NOT NULL
GROUP BY start_station_name
ORDER BY Num_of_Customers DESC
LIMIT 10;
	

-- Popular starting locations for each type of rider
SELECT member_casual AS type_of_member, start_station_name AS starting_location, start_lat, start_lng, COUNT(*) AS num_of_rides
FROM Cyclistic_Full_Data
WHERE start_station_name IS NOT NULL
GROUP BY member_casual, start_station_name
ORDER BY member_casual, num_of_rides DESC;


-- Popular ending locations for each type of rider
SELECT member_casual AS type_of_member, end_station_name AS ending_location, end_lat, end_lng, COUNT(*) AS num_of_rides
FROM Cyclistic_Full_Data
WHERE end_station_name IS NOT NULL
GROUP BY member_casual, end_station_name
ORDER BY member_casual, num_of_rides DESC;


-- Most popular day to ride by month
SELECT CASE
	WHEN started_at LIKE '11%' THEN 'November'
	WHEN started_at LIKE '12%' THEN 'December'
	WHEN started_at LIKE '1-%' THEN 'January'
	WHEN started_at LIKE '2-%' THEN 'February'
	ELSE 'March'
	END AS month_name,
	CASE
	WHEN day_of_week = 1 THEN 'Sunday'
	WHEN day_of_week = 2 THEN 'Monday'
	WHEN day_of_week = 3 THEN 'Tuesday'
	WHEN day_of_week = 4 THEN 'Wednesday'
	WHEN day_of_week = 5 THEN 'Thursday'
	WHEN day_of_week = 6 THEN 'Friday'
	ELSE 'Saturday'
END AS dayname,
COUNT(*) AS num_rides
FROM Cyclistic_Full_Data
GROUP BY month_name, dayname
ORDER BY month_name, num_rides DESC;
	
	
--Average bike riding time by membership type
SELECT member_casual AS Member_Type, round(AVG(ride_length_min),2) AS Average_Length_of_Ride
FROM Cyclistic_Full_Data
WHERE start_station_name IS NOT NULL
GROUP BY member_casual;

	
--Top 20 highest ride times for member group
SELECT member_casual AS member_type, ride_length_min AS ridetime, start_station_name
FROM Cyclistic_Full_Data
WHERE member_casual = "member"
ORDER BY ridetime DESC
LIMIT 20;


--Top 20 highest ride times for casual group
SELECT member_casual AS member_type, ride_length_min AS ridetime, start_station_name
FROM Cyclistic_Full_Data
WHERE  member_casual = "casual"
ORDER BY ridetime DESC
LIMIT 20;
	

-- Most popular day to ride a bike by member type
SELECT member_casual AS member_type, rideable_type AS type_of_bike, CASE
	WHEN day_of_week = 1 THEN 'Sunday'
	WHEN day_of_week = 2 THEN 'Monday'
	WHEN day_of_week = 3 THEN 'Tuesday'
	WHEN day_of_week = 4 THEN 'Wednesday'
	WHEN day_of_week = 5 THEN 'Thursday'
	WHEN day_of_week = 6 THEN 'Friday'
	ELSE 'Saturday'
END AS dayname,
COUNT(*) AS Num_of_Trips
FROM Cyclistic_Full_Data
GROUP BY dayname, member_casual, type_of_bike
ORDER BY member_type, type_of_bike, day_of_week, Num_of_Trips DESC;
	
	
-- Most popular bike type by member type 

SELECT
member_casual AS member_type,
rideable_type AS bike_type,
COUNT(*) AS number_of_trips
FROM Cyclistic_Full_Data
GROUP BY member_type, bike_type
ORDER BY member_type, bike_type;


-- Determine the most popular stations by bike type

SELECT member_casual AS type_of_member, rideable_type AS bike_type, start_station_name AS starting_location, start_lat, start_lng,
COUNT(*) AS num_of_rides
FROM Cyclistic_Full_Data
WHERE start_station_name IS NOT NULL	
GROUP BY member_casual, bike_type, start_station_name
ORDER BY member_casual, bike_type, num_of_rides DESC;


SELECT member_casual AS type_of_member, rideable_type AS bike_type, end_station_name AS ending_location, end_lat,end_lng,
COUNT(*) AS num_of_rides
FROM Cyclistic_Full_Data
WHERE end_station_name IS NOT NULL
GROUP BY member_casual, bike_type, end_station_name
ORDER BY member_casual, bike_type, num_of_rides DESC;


-- Determine most popular destinations on Tuesday through Thursday for casual electric riders
SELECT start_station_name AS start_location,
COUNT(*) AS num_of_rides, start_lat, start_lng
FROM Cyclistic_Full_Data
WHERE (day_of_week > 2 AND day_of_week < 6) AND rideable_type = "electric_bike" AND member_casual = "casual" AND start_location IS NOT NULL
GROUP BYstart_location
ORDER BY num_of_rides DESC;


SELECT end_station_name AS end_location,
COUNT(*) AS num_of_rides, end_lat, end_lng
FROM Cyclistic_Full_Data
WHERE (day_of_week > 2 AND day_of_week < 6) AND rideable_type = "electric_bike" AND member_casual = "casual" AND end_location IS NOT NULL
GROUP BY end_location
ORDER BY num_of_rides DESC;


--Average ride time of casual riders using electric bikes during the week and Tues-Thurs

SELECT
CASE
	WHEN day_of_week = 1 THEN 'Sunday'
	WHEN day_of_week = 2 THEN 'Monday'
	WHEN day_of_week = 3 THEN 'Tuesday'
	WHEN day_of_week = 4 THEN 'Wednesday'
	WHEN day_of_week = 5 THEN 'Thursday'
	WHEN day_of_week = 6 THEN 'Friday'
	ELSE 'Saturday'
END AS dayname, round(avg(ride_length_min),2) AS average_ride_time
FROM Cyclistic_Full_Data
GROUP BY dayname
ORDER BY day_of_week;


SELECT
CASE
	WHEN day_of_week = 1 THEN 'Sunday'
	WHEN day_of_week = 2 THEN 'Monday'
	WHEN day_of_week = 3 THEN 'Tuesday'
	WHEN day_of_week = 4 THEN 'Wednesday'
	WHEN day_of_week = 5 THEN 'Thursday'
	WHEN day_of_week = 6 THEN 'Friday'
	ELSE 'Saturday'
END AS dayname, round(avg(ride_length_min),2) AS average_ride_time
FROM Cyclistic_Full_Data

WHERE day_of_week > 2 AND day_of_week < 6
GROUP BY dayname
ORDER BY day_of_week;


-- Find popular start time for rides during the week by member type
SELECT member_casual AS member_type,
substr(start_time, 1,2) AS hour_of_day,
COUNT(*) AS num_of_rides, rideable_type
FROM Cyclistic_Full_Data
GROUP BY member_type, hour_of_day, rideable_type
ORDER BY member_type, hour_of_day;


--Find popular start time for rides during the week for electric casual riders
SELECT
substr(start_time, 1,2) AS hour_of_day,
COUNT(*) AS num_of_rides
FROM Cyclistic_Full_Data 
WHERE rideable_type = "electric_bike" AND member_casual = "casual"
GROUP BY hour_of_day
ORDER BY hour_of_day;
